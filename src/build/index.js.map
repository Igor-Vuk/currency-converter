{"version":3,"sources":["../server/index.js"],"names":["APP_PORT","PORT","process","env","app","dateObj","Date","month","getUTCMonth","day","getUTCDate","year","getUTCFullYear","newDate","date","storage","diskStorage","destination","req","file","cb","filename","now","originalname","upload","set","join","__dirname","use","static","uploadedFileName","get","res","find","err","AllFiles","console","log","length","send","post","single","next","readFile","readFileSync","path","parseFile","JSON","parse","exchange","map","newExchange","currency","fullExchange","amount","name","save","render","listen"],"mappings":"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","file":"index.js","sourcesContent":["// Imports\r\nimport Express from 'express'\r\nimport path from 'path'\r\nimport fs from 'fs'\r\nimport multer from 'multer'\r\nimport mongoose from './db/mongoose'\r\nimport conf from './conf'\r\nimport Exchange from './models/exchange'\r\n\r\nconst APP_PORT = conf.APP_PORT\r\nconst PORT = process.env.PORT || APP_PORT\r\nconst app = new Express()\r\n\r\n// Configure current Date\r\nconst dateObj = new Date()\r\nconst month = dateObj.getUTCMonth() + 1\r\nconst day = dateObj.getUTCDate()\r\nconst year = dateObj.getUTCFullYear()\r\nconst newDate = year + '.' + month + '.' + day + '.'\r\nconst date = newDate\r\n\r\n// Configure Multer save destination and custom filename\r\nconst storage = multer.diskStorage({\r\n  destination: (req, file, cb) => {\r\n    cb(null, 'uploads/')\r\n  },\r\n  filename: (req, file, cb) => {\r\n    cb(null, date + '(' + Date.now() + ')' + '-' + file.originalname)\r\n  }\r\n})\r\nconst upload = multer({ storage: storage })\r\n\r\n// Middleware\r\napp.set('views', path.join(__dirname, 'views'))\r\napp.set('view engine', 'ejs')\r\napp.use(Express.static(path.join(__dirname, '../', 'dist')))\r\n\r\n// Routes\r\n// -----------------------\r\n\r\n// keeps the name of the last uploaded file\r\nvar uploadedFileName = ''\r\n\r\n// GET ROUTE\r\napp.get('/exchange', (req, res) => {\r\n  Exchange.find({'name': uploadedFileName}, (err, AllFiles) => {\r\n    if (err) {\r\n      console.log(err)\r\n    } else {\r\n      if (AllFiles.length > 0) {\r\n        res.send(AllFiles)\r\n      }\r\n    }\r\n  })\r\n})\r\n\r\n// POST ROUTE\r\napp.post('/exchange', upload.single('file'), (req, res, next) => {\r\n  const readFile = fs.readFileSync(req.file.path, 'utf8')\r\n  uploadedFileName = req.file.filename\r\n  const parseFile = JSON.parse(readFile)\r\n\r\n  parseFile.exchange.map(fullExchange => {\r\n    // save to mongodb\r\n    const newExchange = new Exchange()\r\n    newExchange.currency = fullExchange.currency\r\n    newExchange.amount = fullExchange.amount\r\n    newExchange.name = req.file.filename\r\n    newExchange.date = date\r\n    newExchange.save()\r\n  })\r\n  // send response after done saving to mongo\r\n  res.send('response')\r\n})\r\n\r\napp.get('*', (req, res) => {\r\n  res.render('index')\r\n})\r\n\r\napp.listen(PORT, () => {\r\n  console.log(`Express server is up on port ${PORT}`)\r\n})\r\n"]}